{"version":3,"sources":["Pages/Current.js","Pages/Tomorrow.js","Pages/Hourly.js","App.js","index.js"],"names":["Current","props","this","currentData","error","isLoaded","data","message","className","src","current","condition","icon","text","temp_c","feelslike_c","cloud","humidity","wind_kph","wind_dir","pressure_mb","precip_mm","uv","React","Component","Tomorrow","forecast","forecastday","day","mintemp_c","maxtemp_c","avghumidity","maxwind_kph","daily_chance_of_rain","daily_chance_of_snow","totalprecip_mm","Hourly","map","hour","filter","hourlyData","time_epoch","Date","now","i","time","getDate","getMonth","getHours","renderHourly","App","state","location","currentWeather","a","fetch","then","response","json","setState","city","console","log","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ea7cd5e.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nclass Current extends React.Component\n{\n\n    constructor (props) {\n      super(props);\n    }\n  \n    render()\n    {\n      const {error, isLoaded, data} = this.props.currentData;\n      if(error){\n        return <div>Error: {error.message}</div>\n      } else if(!isLoaded){\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div>\n            <ul className=\"container\">\n                <li><img src={data.current.condition.icon}/></li>\n                <li>{data.current.condition.text}</li>\n                <li className=\"temp\">{data.current.temp_c}°C</li>\n                <li>feels like: <span className=\"temp\">{data.current.feelslike_c}°C</span></li>\n            </ul>\n            <ul className=\"additional\">\n              <li>Clouds: {data.current.cloud}%</li>\n              <li>Humidity: {data.current.humidity}%</li>\n              <li>Wind: {data.current.wind_kph} km/h ({data.current.wind_dir})</li>\n              <li>Pressure: {data.current.pressure_mb}mb</li>\n              <li>Precipitation: {data.current.precip_mm}mm</li>\n              <li>UV index: {data.current.uv}</li>\n            </ul>\n          </div>\n        );\n      }\n        \n    }\n}\n\nexport default Current;\n","import React from 'react';\nimport './style.css';\n\nclass Tomorrow extends React.Component\n{\n\n    constructor (props) {\n      super(props);\n    }\n  \n    render()\n    {\n      const {error, isLoaded, data} = this.props.forecast;\n      if(error){\n        return <div>Error: {error.message}</div>\n      } else if(!isLoaded){\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div>\n            <ul className=\"container\">\n                <li><img src={data.forecast.forecastday[1].day.condition.icon}/></li>\n                <li>{data.forecast.forecastday[1].day.condition.text}</li>\n                <li>min: <span className=\"temp\">{data.forecast.forecastday[1].day.mintemp_c}°C</span></li>\n                <li>max: <span className=\"temp\">{data.forecast.forecastday[1].day.maxtemp_c}°C</span></li>\n            </ul>\n            <ul className=\"additional\">\n              <li>Average humidity: {data.forecast.forecastday[1].day.avghumidity}%</li>\n              <li>Maximum wind: {data.forecast.forecastday[1].day.maxwind_kph} km/h</li>\n              <li>Chance of rain: {data.forecast.forecastday[1].day.daily_chance_of_rain}%</li>\n              <li>Chance of snow: {data.forecast.forecastday[1].day.daily_chance_of_snow}%</li>\n              <li>Precipitation: {data.forecast.forecastday[1].day.totalprecip_mm}mm</li>\n              <li>UV index: {data.forecast.forecastday[1].day.uv}</li>\n            </ul>\n          </div>\n        );\n      }\n        \n    }\n}\n\nexport default Tomorrow;\n","import React from 'react';\nimport './style.css';\n\nclass Hourly extends React.Component\n{\n\n    constructor (props) {\n      super(props);\n    }\n  \n    render()\n    {\n      const {error, isLoaded, data} = this.props.forecast;\n\n      const renderHourly = (data) =>\n        data.forecast.forecastday.map(\n          (day) => day.hour\n            .filter(\n              hourlyData => hourlyData.time_epoch*1000 >= (Date.now()-3600000)\n            ).map((hourlyData, i) => {\n                const time = new Date(hourlyData.time_epoch*1000)\n              return <ul key={i} className=\"container\">\n                <li><span className=\"date\">{time.getDate() + \".0\" + (time.getMonth() + 1) + \".\"}</span> <br /> {time.getHours() + ':00'}</li>\n                <li><img src={hourlyData.condition.icon} /></li>\n                <li>{hourlyData.condition.text}</li>\n                <li className=\"temp\">{hourlyData.temp_c}°C</li>\n              </ul>\n            }\n          )\n        ); \n\n      if(error){\n        return <div>Error: {error.message}</div>\n      } else if(!isLoaded){\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div>\n            {renderHourly(data)}\n          </div>\n        );\n      }\n        \n    }\n}\n\nexport default Hourly;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Current from './Pages/Current';\nimport Tomorrow from './Pages/Tomorrow';\nimport Hourly from './Pages/Hourly';\nimport './App.css'\n\n\n\n\nclass App extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      location: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      currentWeather: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      forecast: {\n        error: null,\n        isLoaded: false,\n        data: null\n      }\n    }\n  }\n\n  async componentDidMount()\n  {\n    await fetch(\"https://json.geoiplookup.io/\")\n      .then(response => response.json())\n      .then (\n        (data) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              data,\n              error: data.error\n            }\n          });\n        },\n        (error) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              error\n            }\n          });\n        }\n      )\n\n    fetch(\"https://api.weatherapi.com/v1/current.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&aqi=no\")\n    .then(response => response.json())\n    .then(\n        (data) => {\n          console.log(data);\n         this.setState({\n          currentWeather: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          currentWeather: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n\n    fetch(\"https://api.weatherapi.com/v1/forecast.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&days=10&aqi=yes&alerts=yes\")          .then(response => response.json())\n      .then(\n        (data) => {\n          console.log(data);\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n  }\n\n  render()\n  {\n    return (\n      <div>\n        <nav>\n          <ul className=\"buttonList\">\n            <li>\n              <Link to=\"/Weather-Forecast\">Current</Link>\n            </li>\n            <li>\n              <Link to=\"/tomorrow\">Tomorrow</Link>\n            </li>\n            <li>\n              <Link to=\"/hourly\">Hourly</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/Weather-Forecast\">\n            <Current currentData={this.state.currentWeather} />\n          </Route>\n          <Route path=\"/tomorrow\">\n            <Tomorrow forecast={this.state.forecast} />\n         </Route>\n         <Route path=\"/hourly\">\n            <Hourly forecast={this.state.forecast} />\n         </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}