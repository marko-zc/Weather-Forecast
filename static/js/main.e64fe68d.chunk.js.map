{"version":3,"sources":["Pages/Current.js","Pages/Tomorrow.js","Pages/Hourly.js","App.js","index.js"],"names":["Current","props","this","currentData","error","isLoaded","data","message","className","location","name","country","src","current","condition","icon","text","temp_c","feelslike_c","cloud","humidity","wind_kph","wind_dir","pressure_mb","precip_mm","uv","React","Component","Tomorrow","forecast","forecastday","day","mintemp_c","maxtemp_c","avghumidity","maxwind_kph","daily_chance_of_rain","daily_chance_of_snow","totalprecip_mm","Hourly","map","hour","filter","hourlyData","time_epoch","Date","now","i","time","getDate","getMonth","getHours","renderHourly","App","state","currentWeather","a","fetch","then","response","json","setState","city","console","log","id","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e64fe68d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nclass Current extends React.Component\r\n{\r\n\r\n    constructor (props) {\r\n      super(props);\r\n    }\r\n  \r\n    render()\r\n    {\r\n      const {error, isLoaded, data} = this.props.currentData;\r\n      if(error){\r\n        return <div>Error: {error.message}</div>\r\n      } else if(!isLoaded){\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <div className=\"content\">\r\n            <div className=\"location\">{data.location.name}, {data.location.country}</div>\r\n            <ul className=\"container\">\r\n                <li><img src={data.current.condition.icon}/></li>\r\n                <li className=\"condition\">{data.current.condition.text}</li>\r\n                <li className=\"temp\">{data.current.temp_c}°C</li>\r\n                <li>feels like: <span className=\"temp\">{data.current.feelslike_c}°C</span></li>\r\n            </ul>\r\n            <ul className=\"additional\">\r\n              <li>Clouds: {data.current.cloud}%</li>\r\n              <li>Humidity: {data.current.humidity}%</li>\r\n              <li>Wind: {data.current.wind_kph} km/h ({data.current.wind_dir})</li>\r\n              <li>Pressure: {data.current.pressure_mb}mb</li>\r\n              <li>Precipitation: {data.current.precip_mm}mm</li>\r\n              <li>UV index: {data.current.uv}</li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n        \r\n    }\r\n}\r\n\r\nexport default Current;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Tomorrow extends React.Component\r\n{\r\n\r\n    constructor (props) {\r\n      super(props);\r\n    }\r\n  \r\n    render()\r\n    {\r\n      const {error, isLoaded, data} = this.props.forecast;\r\n      if(error){\r\n        return <div>Error: {error.message}</div>\r\n      } else if(!isLoaded){\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <div className=\"content\">\r\n            <div className='location'>{data.location.name}, {data.location.country}</div>\r\n            <ul className=\"container\">\r\n                <li><img src={data.forecast.forecastday[1].day.condition.icon}/></li>\r\n                <li className=\"condition\">{data.forecast.forecastday[1].day.condition.text}</li>\r\n                <li>min: <span className=\"temp\">{data.forecast.forecastday[1].day.mintemp_c}°C</span></li>\r\n                <li>max: <span className=\"temp\">{data.forecast.forecastday[1].day.maxtemp_c}°C</span></li>\r\n            </ul>\r\n            <ul className=\"additional\">\r\n              <li>Average humidity: {data.forecast.forecastday[1].day.avghumidity}%</li>\r\n              <li>Maximum wind: {data.forecast.forecastday[1].day.maxwind_kph} km/h</li>\r\n              <li>Chance of rain: {data.forecast.forecastday[1].day.daily_chance_of_rain}%</li>\r\n              <li>Chance of snow: {data.forecast.forecastday[1].day.daily_chance_of_snow}%</li>\r\n              <li>Precipitation: {data.forecast.forecastday[1].day.totalprecip_mm}mm</li>\r\n              <li>UV index: {data.forecast.forecastday[1].day.uv}</li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n        \r\n    }\r\n}\r\n\r\nexport default Tomorrow;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Hourly extends React.Component\r\n{\r\n\r\n    constructor (props) {\r\n      super(props);\r\n    }\r\n  \r\n    render()\r\n    {\r\n      const {error, isLoaded, data} = this.props.forecast;\r\n\r\n      const renderHourly = (data) =>\r\n        data.forecast.forecastday.map(\r\n          (day) => day.hour\r\n            .filter(\r\n              hourlyData => hourlyData.time_epoch*1000 >= (Date.now()-3600000)\r\n            ).map((hourlyData, i) => {\r\n                const time = new Date(hourlyData.time_epoch*1000)\r\n              return  <div className=\"hourlyCard\">\r\n                        <div>{data.location.name}, {data.location.country}</div>\r\n                        <div>\r\n                          <ul key={i} className=\"container\">\r\n                            <li><span className=\"date\">{time.getDate() + \".0\" + (time.getMonth() + 1) + \".\"}</span> <br /> <span className=\"hours\"> {time.getHours() + ':00'} </span> </li>\r\n                            <li><img src={hourlyData.condition.icon} /></li>\r\n                            <li className=\"condition\">{hourlyData.condition.text}</li>\r\n                            <li className=\"temp\">{hourlyData.temp_c}°C</li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n            }\r\n          )\r\n        ); \r\n\r\n      if(error){\r\n        return <div>Error: {error.message}</div>\r\n      } else if(!isLoaded){\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <div>\r\n            {renderHourly(data)}\r\n          </div>\r\n        );\r\n      }\r\n        \r\n    }\r\n}\r\n\r\nexport default Hourly;\r\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Current from './Pages/Current';\nimport Tomorrow from './Pages/Tomorrow';\nimport Hourly from './Pages/Hourly';\nimport './App.css'\n\n\n\n\nclass App extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      location: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      currentWeather: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      forecast: {\n        error: null,\n        isLoaded: false,\n        data: null\n      }\n    }\n  }\n\n  async componentDidMount()\n  {\n    await fetch(\"https://json.geoiplookup.io/\")\n      .then(response => response.json())\n      .then (\n        (data) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              data,\n              error: data.error\n            }\n          });\n        },\n        (error) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              error\n            }\n          });\n        }\n      )\n\n    fetch(\"https://api.weatherapi.com/v1/current.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&aqi=no\")\n    .then(response => response.json())\n    .then(\n        (data) => {\n          console.log(data);\n         this.setState({\n          currentWeather: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          currentWeather: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n\n    fetch(\"https://api.weatherapi.com/v1/forecast.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&days=10&aqi=yes&alerts=yes\")\n    .then(response => response.json())\n      .then(\n        (data) => {\n          console.log(data);\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n  }\n\n  render()\n  {\n    return (\n      <div id=\"main\">\n        <nav>\n          <ul className=\"buttonList\">\n            <li>\n              <Link className=\"link\" to=\"/Weather-Forecast\">Current</Link>\n            </li>\n            <li>\n              <Link className=\"link\" to=\"/hourly\">Hourly</Link>\n            </li>\n            <li>\n              <Link className=\"link\" to=\"/tomorrow\">Tomorrow</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/Weather-Forecast\">\n            <Current currentData={this.state.currentWeather} />\n          </Route>\n          <Route path=\"/tomorrow\">\n            <Tomorrow forecast={this.state.forecast} />\n         </Route>\n         <Route path=\"/hourly\">\n            <Hourly forecast={this.state.forecast} />\n         </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}