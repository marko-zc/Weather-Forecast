{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marko\\\\Desktop\\\\weather\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Current from './Pages/Current';\nimport Tomorrow from './Pages/Tomorrow';\nimport Hourly from './Pages/Hourly';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      currentWeather: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      forecast: {\n        error: null,\n        isLoaded: false,\n        data: null\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await fetch(\"https://json.geoiplookup.io/\").then(response => response.json()).then(data => {\n      this.setState({\n        location: {\n          isLoaded: true,\n          data,\n          error: data.error\n        }\n      });\n    }, error => {\n      this.setState({\n        location: {\n          isLoaded: true,\n          error\n        }\n      });\n    });\n    fetch(\"https://api.weatherapi.com/v1/current.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&aqi=no\").then(response => response.json()).then(data => {\n      this.setState({\n        currentWeather: {\n          isLoaded: true,\n          data,\n          error: data.error\n        }\n      });\n    }, error => {\n      this.setState({\n        currentWeather: {\n          isLoaded: true,\n          error\n        }\n      });\n    });\n    fetch(\"https://api.weatherapi.com/v1/forecast.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&days=10&aqi=yes&alerts=yes\").then(response => response.json()).then(data => {\n      this.setState({\n        forecast: {\n          isLoaded: true,\n          data,\n          error: data.error\n        }\n      });\n    }, error => {\n      this.setState({\n        forecast: {\n          isLoaded: true,\n          error\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"buttonList\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Weather-Forecast/current\",\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Weather-Forecast/tomorrow\",\n              children: \"Tomorrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Weather-Forecast/hourly\",\n              children: \"Hourly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Weather-Forecast\",\n          children: /*#__PURE__*/_jsxDEV(Current, {\n            currentData: this.state.currentWeather\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Weather-Forecast/tomorrow\",\n          children: /*#__PURE__*/_jsxDEV(Tomorrow, {\n            forecast: this.state.forecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Weather-Forecast/hourly\",\n          children: /*#__PURE__*/_jsxDEV(Hourly, {\n            forecast: this.state.forecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Marko/Desktop/weather/weather/src/App.js"],"names":["React","Link","Route","Switch","Current","Tomorrow","Hourly","App","Component","constructor","props","state","location","error","isLoaded","data","currentWeather","forecast","componentDidMount","fetch","then","response","json","setState","city","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Current from './Pages/Current';\nimport Tomorrow from './Pages/Tomorrow';\nimport Hourly from './Pages/Hourly';\nimport './App.css'\n\n\n\n\nclass App extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      location: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      currentWeather: {\n        error: null,\n        isLoaded: false,\n        data: null\n      },\n      forecast: {\n        error: null,\n        isLoaded: false,\n        data: null\n      }\n    }\n  }\n\n  async componentDidMount()\n  {\n    await fetch(\"https://json.geoiplookup.io/\")\n      .then(response => response.json())\n      .then (\n        (data) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              data,\n              error: data.error\n            }\n          });\n        },\n        (error) => {\n          this.setState({\n            location: {\n              isLoaded: true,\n              error\n            }\n          });\n        }\n      )\n\n    fetch(\"https://api.weatherapi.com/v1/current.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&aqi=no\")\n    .then(response => response.json())\n    .then(\n        (data) => {\n         this.setState({\n          currentWeather: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          currentWeather: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n\n    fetch(\"https://api.weatherapi.com/v1/forecast.json?key=75a62926a7bb4dc0bb8100310212402&q=\" + this.state.location.data.city + \"&days=10&aqi=yes&alerts=yes\")          .then(response => response.json())\n      .then(\n        (data) => {\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          data,\n          error: data.error\n          }\n        });\n      },\n      (error) => {\n        this.setState({\n          forecast: {\n          isLoaded: true,\n          error\n          }\n        });\n      }\n    ) \n  }\n\n  render()\n  {\n    return (\n      <div>\n        <nav>\n          <ul className=\"buttonList\">\n            <li>\n              <Link to=\"/Weather-Forecast/current\">Current</Link>\n            </li>\n            <li>\n              <Link to=\"/Weather-Forecast/tomorrow\">Tomorrow</Link>\n            </li>\n            <li>\n              <Link to=\"/Weather-Forecast/hourly\">Hourly</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/Weather-Forecast\">\n            <Current currentData={this.state.currentWeather} />\n          </Route>\n          <Route path=\"/Weather-Forecast/tomorrow\">\n            <Tomorrow forecast={this.state.forecast} />\n         </Route>\n         <Route path=\"/Weather-Forecast/hourly\">\n            <Hourly forecast={this.state.forecast} />\n         </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}